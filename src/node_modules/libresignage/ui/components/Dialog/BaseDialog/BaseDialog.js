/**
* Callback function for dialog constructors..
*
* @callback BaseDialog_callback
* @alias    BaseDialog_callback
*
* @param {boolean} state True if the user clicked OK, false otherwise.
*/

/**
* A base dialog class for creating HTML dialogs.
*
* @memberof module:libresignage/ui/components/Dialog
*/
class BaseDialog {
	constructor(title, body) {
		this.make_template(title, body);
		this.prevent_tab_listener = e => {
			if (e.keyCode === 9) {
				e.preventDefault();
			}
		}
	}

	/**
	* Create a base dialog template.
	*
	* @param {string} title The title of the dialog.
	* @param {string} body  The body of the dialog.
	*
	* @returns {HTMLElement} The created <template> element.
	*/
	make_template(title, body) {
		this.template = document.createElement('template');
		this.template.innerHTML = `
			<div class="dialog-overlay">
				<div class="dialog container alert alert-info">
					<h3 class="dialog-title display-5">${title}</h3>
					<p class="dialog-body">${body}</p>
					<div
						class="dialog-interaction d-flex
						flex-row-reverse w-100 mt-3">
					</div>
				</div>
			</div>
		`;
	}
	
	/**
	* Show a dialog.
	*
	* This function also sets up an event listener that prevents
	* the user from using tab to navigate on the page.
	*/
	show() {
		document.body.appendChild(this.template.content);
		document.addEventListener('keydown', this.prevent_tab_listener);
		this.focus_default();
	}

	/**
	* Hide a dialog.
	*
	* This function also removes the tab-prevention event listener
	* created by BaseDialog.show().
	*/
	hide() {
		document.removeEventListener('keydown', this.prevent_tab_listener);
		document.body.removeChild(
			document.body.querySelector('.dialog-overlay')
		);
	}

	/**
	* Set focus on the default option in a dialog. Override this
	* function in classes extending BaseDialog.
	*/
	focus_default() {}
}
module.exports = BaseDialog;
